@using HomeTrack.Core
@model ImportPreview
<h2>@Model.Import.ImportType</h2>

@{
	var importRows = Model.Import.GetData().ToArray();
	int count = importRows.Count();
	int matched = 0;
}

@if ( !Model.AccountIdentifiers.Any() )
{
	<p class="is-error">
		You do not have any active account identifiers.
	</p>
}

<table>
	<thead>
		<tr>
			<td>
				Date
			</td>
			@foreach ( var p in @Model.Import.GetPropertyNames() )
			{
				<td>@p</td>
			}
			<td>
				Cr
			</td>
			<td>
				Dr
			</td>
			<td></td>
		</tr>
	</thead>
	<tbody>
		@foreach ( var row in importRows )
		{
			var props = row.Properties.ToDictionary(p => p.Key, p => p.Value);
			var account = row.IdentifyAccount(Model.AccountIdentifiers);
			if (account != null)
			{
				matched++;
			}
	  
			<tr @Html.Raw(account == null ? "" : string.Format("class='has-account {0}'", account.Type.ToString().ToLower())) >
				<td>
					@row.Date.ToString("yyyy-M-d")
				</td>
				@foreach (var p in @Model.Import.GetPropertyNames())
				{
					<td>@props[p]
					</td>
				}
				<td>
					@AccountType.Asset.ToCr(row.Amount).AsAmount()
				</td>
				<td>
					@AccountType.Asset.ToDr(row.Amount).AsAmount()
				</td>
				<td>
					@(account == null ? "" : account.Name)
				</td>
			</tr>
		}
	</tbody>
	<tfoot>
		<td colspan="@(4 + Model.Import.GetPropertyNames().Count())">Matched @matched of @count (@(((double )matched / count * 100.0).ToString("n2"))%)</td>
	</tfoot>
</table>
